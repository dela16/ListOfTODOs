@page
@model ListOfTODOs.Pages.ItemIndexModel
@{
    ViewData["Title"] = "ToDo List";
}

<form id="add-item-form">
	Activity: <input type="text" name="ItemToDo" value="" placeholder="Add an activity"/> <button class="btn btn-dark" id="post-item">Add item</button>
</form>

<form id="list-items-form">
	<nav id="taskList">
		<ul class="mt-3" id="itemsOnToDoList">
			<li>
				<input type="checkbox" id="bock" />Såhär vill jag att det ska se ut
			</li>
		</ul>
	</nav>
</form>

<form id="delete-item-form">
	Id: <input type="number" name="ItemToDelete" value="" placeholder="What id to delete?" /> <button class="btn btn-success" id="delete-item">Complete Task / Remove</button>
</form>


<form id="item-to-edit-form">
	Id: <input type="number" name="ItemId" value="" placeholder="What id to edit?"/>
	Edit: <input type="text" name="ItemToEdit" value="" placeholder="Re-write your task"/> <button class="btn btn-dark" id="edit-item">Edit</button>
</form>
<div>
	<br />
	<h2>Info</h2>
	<p>Om du bara vill markera bort en aktivitet så bockar du av rutan. Vill du radera en aktivitet helt från listan och databasen så skriver du in Id och klickar på den gröna knappen.</p>
</div>



@section Scripts{
	<script>
        let postItemBtn = document.getElementById("post-item");
		let itemsOnToDoList = document.getElementById("itemsOnToDoList");
		let deleteItemBtn = document.getElementById("delete-item");
		let editItemBtn = document.getElementById("edit-item");

		async function updateItemList(){
			fetch("/items")
			.then(respons => respons.json())
			.then(data => {
				for(let i = 1; i < data.length; i++){
					const checkbox = document.createElement("input");
					const li = document.createElement("li");
					checkbox.type = "checkbox";
					checkbox.addEventListener('click', () => {
						if(checkbox.checked){
							li.style.textDecoration = "line-through" //Jag får i konsol online att li is not defined. Varför?
						}
						else{
							li.style.textDecoration = "none";
						}
					});
						
					li.innerText = `Id: ${data[i].id} - ${data[i].activity}`;
					li.appendChild(checkbox);
					itemsOnToDoList.appendChild(li);
				}
			})
		};

		postItemBtn.addEventListener('click', async () => {
			const postItemForm = document.getElementById("add-item-form").elements;

			const itemInfo =
			{
				Activity: postItemForm.namedItem("ItemToDo").value
			};
			
			const clearInputField = {
				Activity: postItemForm.namedItem("ItemToDo").value=''
			};

			await postItemInfo("/items", itemInfo);
			await updateItemList();
        })

		async function postItemInfo(url = '', data = {}){
		console.log(JSON.stringify(data))
		fetch(url, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(data)
		})
		}

		editItemBtn.addEventListener('click', async () => { //Denna uppdateras inte direkt, bara i db. Måste ladda om sidan.
			const editItemForm = document.getElementById("item-to-edit-form").elements;
			const editItemId = editItemForm.namedItem("ItemId").value;
			const editItemInfo = {Activity: editItemForm.namedItem("ItemToEdit").value};

			const clearInputField = {
				Activity: editItemForm.namedItem("ItemToEdit").value=''
			};

			await putItemInfo("/items/" + editItemId, editItemInfo);
			await updateItemList();
		})

		async function putItemInfo (url = '', data = {}){
			console.log(JSON.stringify(data))
			fetch(url,{
				method: 'PUT',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data)
			})
		}


		deleteItemBtn.addEventListener('click', async () => {
		const deleteItemForm = document.getElementById("delete-item-form").elements; //Byta ut denna raden mot checkbox. 

		const deleteItemInfo = deleteItemForm.namedItem("ItemToDelete").value;

		const clearInputField = {
			Activity: deleteItemForm.namedItem("ItemToDelete").value = ''
		};

			await deleteFunction("/items/" + deleteItemInfo, {});
			await updateItemList();
		});

		async function deleteFunction(url = '', data = {}){
			fetch(url, {
				method: 'DELETE',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data)
			})
		}




    </script>
}