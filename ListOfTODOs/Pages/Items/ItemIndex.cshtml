@page
@model ListOfTODOs.Pages.ItemIndexModel
@{
    ViewData["Title"] = "ToDo List";
}

<form id="add-item-form">
	Activity: <input type="text" name="ItemToDo" value="" /> <button class="btn btn-dark" id="post-item">Add item</button>
</form>

<form id="list-items-form">
	<ul class="mt-3" id="itemsOnToDoList"><li><input type="checkbox" id="bock" />Såhär vill jag att det ska se ut</li></ul>
</form>

<form id="delete-item-form">
	Id: <input type="number" name="ItemToDelete" value="" /> <button class="btn btn-danger" id="delete-item">Delete</button>
</form>


<form id="item-to-update-form">
	Id: <input type="number" name="ItemId" value=""/>
	Edit: <input type="text" name="ItemToUpdate" value="" /> <button class="btn btn-dark" id="update-item">Update</button>
</form>


@section Scripts{
	<script>
        let postItemBtn = document.getElementById("post-item");
		let itemsOnToDoList = document.getElementById("itemsOnToDoList");
		let deleteItemBtn = document.getElementById("delete-item");
		let updateItemBtn = document.getElementById("update-item");

		function showAllItemsInList(){
			fetch("/items")
			.then(respons => respons.json())
			.then(data => {
				for(let i = 1; i < data.length; i++){
					const li = document.createElement("li"); //Nu har jag ju fått till boxen. Hur lägga till dupliceringar?
					const checkbox = document.createElement("input");
					checkbox.type = "checkbox";
					//check(checkbox);
					li.innerText = `Id: ${data[i].id} - ${data[i].activity}`;
					li.appendChild(checkbox);

					itemsOnToDoList.appendChild(li);

						////const li = document.createElement("li"); //Nu har jag ju fått till boxen. Hur lägga till dupliceringar?
						////const checkbox = document.createElement("input");
						////checkbox.type = "checkbox";
						////check(checkbox);
						//const rad = document.createElement("li");
						//const ruta = "bock";
						//rad.innerText = `Id: ${data[i].id} - ${data[i].activity}`;
						////rad.appendChild(checkbox);
						//itemsOnToDoList.appendChild(ruta);
						//itemsOnToDoList.appendChild(rad);

				}
			})
		};

		showAllItemsInList();

		function check(checkbox){ //Gå igenom listan med checkboxar och om den är bockad,onclick? så stryk över ord och delete från db. Slå ihop denna mede delete funktion?
			for(let i = 1; i < data.length; i++){
				const li = document.createElement("li");
				const checkbox = document.createElement("input");
				checkbox.type = "checkbox";
				if (checkbox[i].checked == true) {
					li[i].value = li[i].style.textDecoration = "line-through";
				}
			}
			
		}

		postItemBtn.addEventListener('click', () => {
			const postItemForm = document.getElementById("add-item-form").elements;

			const itemInfo =
			{
				Activity: postItemForm.namedItem("ItemToDo").value
			};
			
			const clearInputField = {
				Activity: postItemForm.namedItem("ItemToDo").value=''
			};

			postItemInfo("/items", itemInfo);

        })


		//vad gör denna?
		const postItemInfo = (url = '', data = {}) => {
		console.log(JSON.stringify(data))
		fetch(url, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(data)
		})
			.then(response => console.log(response));
		}

		updateItemBtn.addEventListener('click', () => {
			const updateItemForm = document.getElementById("item-to-update-form").elements;
			const updateItemId = updateItemForm.namedItem("ItemId").value;
			const updateItemInfo = {Activity: updateItemForm.namedItem("ItemToUpdate").value};

			const clearInputField = {
				Activity: updateItemForm.namedItem("ItemToUpdate").value=''
			};

			putItemInfo("/items/" + updateItemId, updateItemInfo); 
		})

		const putItemInfo = (url = '', data = {}) => { //återigen denna. 
			console.log(JSON.stringify(data))
			fetch(url,{
				method: 'PUT',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data)
			})
			.then(response => console.log(response));
		}

		deleteItemBtn.addEventListener('click', () => {
			const deleteItemForm = document.getElementById("delete-item-form").elements; //Byta ut denna raden mot checkbox. 

			const deleteItemInfo = deleteItemForm.namedItem("ItemToDelete").value;

			const clearInputField = {
				Activity: deleteItemForm.namedItem("ItemToDelete").value = ''
			};

			deleteFunction("/items/" + deleteItemInfo, {});
			});

		const deleteFunction = (url = '', data = {}) => { //Återigen, kolla vad denna gör. Behöver jag den? 
			console.log(JSON.stringify(data))
			fetch(url, {
				method: 'DELETE',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data)
			})
				.then(response => console.log(response));
		}


    </script>
}